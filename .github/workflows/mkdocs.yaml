name: Build or Deploy Simplyblock Documentation
on:
  push:
    branches:
      - 'main'
      - 'release/**'
  pull_request:
    branches:
      - 'main'
      - '!main'

permissions:
  actions: write
  contents: write
  id-token: write

concurrency:
  group: "documentation"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build-test:
    if: ${{ !startsWith(github.ref, 'refs/heads/release/') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Prepare Documentation Builder"
        run: |
          ./doc-builder build-image
      - name: "Build Documentation Test"
        run: |
          ./doc-builder build
  deployment:
    if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
        with:
          token: '${{ github.token }}'
      - name: "Prepare Documentation Builder"
        run: |
          ./doc-builder build-image
      - name: "Adjust Release Name: ${{ github.ref_name }}"
        env:
          name: "${{ github.ref_name }}"
        run: |
          echo "RELEASE_NAME=$(echo ${name} | sed -e 's/.*\///g')" >> $GITHUB_ENV
      - name: "Prepare Documentation Deployment: ${{ env.RELEASE_NAME }}"
        run: |
          ./doc-builder deploy ${{ env.RELEASE_NAME }}
      - name: "Create Version Tag: ${{ env.RELEASE_NAME }}"
        run: |
          git config --global --add safe.directory $PWD
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add deployment
          git commit -m "Auto-Build: ${RELEASE_NAME}"
          git tag ${RELEASE_NAME}
          git push
      - name: "Upload Documentation"
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.ftp_server }}
          username: ${{ secrets.ftp_username }}
          password: ${{ secrets.ftp_password }}
          server-dir: /docs/
          local-dir: ./deployment/
      - name: "Merge Tag to Main"
        uses: mtanzi/action-automerge@v1
        with:
          github_token: "${{ github.token }}"
          source: "refs/tags/${{ env.RELEASE_NAME }}"
          target: "main"
          webhook_url: ""
